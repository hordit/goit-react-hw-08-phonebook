{"version":3,"file":"static/js/261.6737f113.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.jsx","utils/capitalizedName.jsx","components/ContactForm/ContactForm.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.slyled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Field, Form } from 'formik';\n\nexport const FormStyled = styled(Form)`\ndisplay: flex;\nflex-direction: column;\npadding: 10px;\nmargin: 25px 0 25px 0;\nmax-width: 350px;\nborder: 1px solid ${p => p.theme.colors.black};\n`;\n\nexport const Label = styled.label`\n display: flex;\n flex-direction: column;\n padding-bottom: 20px;\n `;\n\nexport const InputStyled = styled(Field)`\n padding: 4px;\n margin-top: 10px;\n max-width: 250px;\n font-size: 14px;\n border: ${p => p.theme.border};\n border-radius: ${p => p.theme.borderRadius};\n &:hover, &:focus {\n    border-color: ${p => p.theme.colors.borderAccent};\n    outline: none;\n};\n `;\n\nexport const ButtonAdd = styled.button`\n border: ${p => p.theme.border};\n border-radius: ${p => p.theme.borderRadius};\n font-size: 13px;\n background-color: ${p => p.theme.colors.white};\n &:hover {\n    border: ${p => p.theme.colors.backgroundButtoHover};\n    background-color: ${p => p.theme.colors.backgroundButtoHover};\n    box-shadow: 0 0 10px rgba(123, 123, 123, 0.426);\n };\n `;","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const filteredcontacts = contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n    return filteredcontacts;\n  }\n);","export const capitalizedName = str => {\n  return typeof str !== 'string'\n    ? ''\n    : str\n        .split(' ')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n        .join(' ');\n};\n","import { Formik } from 'formik';\nimport {\n  ButtonAdd,\n  FormStyled,\n  InputStyled,\n  Label,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { capitalizedName } from 'utils/capitalizedName';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const contact = {\n      name: values.name,\n      number: values.number,\n    };\n\n    const isExistName = contacts.find(\n      ({ name }) => name.toLowerCase() === contact.name.toLowerCase()\n    );\n\n    if (isExistName) {\n      alert(`${capitalizedName(contact.name)} is already in contacts`);\n      return resetForm();\n    } else {\n      dispatch(\n        addContact({\n          name: capitalizedName(contact.name),\n          number: contact.number,\n        })\n      );\n      resetForm();\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      onSubmit={handleSubmit}\n    >\n      <FormStyled>\n        <Label>\n          Name\n          <InputStyled\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label>\n          Number\n          <InputStyled\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <div>\n          <ButtonAdd type=\"submit\">Add contact</ButtonAdd>\n        </div>\n      </FormStyled>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import styled from \"styled-components\";\n\nexport const Div = styled.div` \ndisplay: flex;\n`;\n\nexport const P = styled.p`\npadding-right: 15px;\n`;\n\nexport const ButtonDelete = styled.button`\nbackground-color: ${p => p.theme.colors.white};\nborder: ${p => p.theme.border};\nborder-radius: ${p => p.theme.borderRadius};\nfont-size: 13px;\n&:hover {\n    border: ${p => p.theme.colors.backgroundButtoHover};\n    background-color: ${p => p.theme.colors.backgroundButtoHover};\n    box-shadow: 0 0 10px rgba(123, 123, 123, 0.426);\n };\n`;\n","import { P, ButtonDelete, Div } from './Contact.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport PropTypes from 'prop-types';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <Div>\n      <P>\n        {name}: {number}\n      </P>\n      <ButtonDelete aria-label=\"Delete\" onClick={handleDelete}>\n        Delete\n      </ButtonDelete>\n    </Div>\n  );\n};\n\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};","import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  padding: 10px;\n`;\n\nexport const Li = styled.li`\n  padding-bottom: 5px;\n`;\n","import { Contact } from 'components/Contact/Contact';\nimport { Li, Ul } from './ContactList.slyled';\nimport { useSelector } from 'react-redux';\nimport {\n  selectError,\n  selectFilteredContacts,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const ContactList = () => {\n  const filtredContacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n\n  return (\n    <>\n      {error && <div>{error}</div>}\n      {isLoading && <Loader />}\n      <Ul>\n        {filtredContacts.map(contact => (\n          <Li key={contact.id}>\n            <Contact\n              id={contact.id}\n              name={contact.name}\n              number={contact.number}\n            />\n          </Li>\n        ))}\n      </Ul>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const DivWrapper = styled.div`\n  padding-top: 25px;\n`;\n\nexport const InputFilter = styled.input`\n  display: flex;\n  padding: 4px;\n  margin-top: 10px;\n  font-size: 14px;\n  border: ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n  &:hover,\n  &:focus {\n    border-color: ${p => p.theme.colors.borderAccent};\n    outline: none;\n  }\n`;\n","import { DivWrapper, InputFilter } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/contactsSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <DivWrapper>\n      <label>\n        Fined contacts by name\n        <InputFilter type=\"text\" value={filter} onChange={handleChange} />\n      </label>\n    </DivWrapper>\n  );\n};\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <main>\n        <section title=\"Phonebook\">\n        <h1>Your phonebook</h1>\n          <ContactForm />\n        </section>\n        <section title=\"Contacts\">\n        <h2>Contacts</h2>\n          <Filter />\n          {isLoading && <Loader />}\n          <ContactList />\n        </section>\n      </main>\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["FormStyled","styled","Form","p","theme","colors","black","Label","InputStyled","Field","border","borderRadius","borderAccent","ButtonAdd","white","backgroundButtoHover","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","name","toLowerCase","includes","capitalizedName","str","split","map","word","charAt","toUpperCase","slice","join","dispatch","useDispatch","useSelector","initialValues","number","onSubmit","values","resetForm","contact","find","alert","addContact","type","pattern","title","required","Div","P","ButtonDelete","Contact","id","onClick","deleteContact","Ul","Li","ContactList","filtredContacts","Loader","DivWrapper","InputFilter","value","onChange","e","setFilter","currentTarget","useEffect","fetchContacts"],"sourceRoot":""}