{"version":3,"file":"static/js/49.923e33b2.chunk.js","mappings":"gVAIaA,EAAaC,EAAAA,GAAOC,KAAIC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+EAMxBC,GAAkBJ,EAAAA,EAAAA,IAAOK,EAAAA,EAAPL,CAAiBM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,iIASnCI,GAAYP,EAAAA,EAAAA,IAAOQ,EAAAA,EAAPR,CAAWS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,2EAMvBO,GAAkBV,EAAAA,EAAAA,IAAOW,EAAAA,EAAPX,CAAcY,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,uQAchCU,GAAgBb,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAee,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,qH,sICpC/Ba,GAAahB,EAAAA,EAAAA,IAAOiB,EAAAA,GAAPjB,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uDAKzBe,EAAQlB,EAAAA,GAAOmB,MAAKb,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,oEAGtB,SAAAiB,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,IAGvBC,GAAcxB,EAAAA,EAAAA,IAAOyB,EAAAA,GAAPzB,CAAaS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,mLAI7B,SAAAiB,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,IACd,SAAAH,GAAC,OAAIA,EAAEC,MAAMK,aAAa,IAMnCC,GAAqB3B,EAAAA,EAAAA,IAAO4B,EAAAA,GAAP5B,CAAoBY,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,yB,oBCvBzC0B,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAM,EAC/CC,EAAe,SAAAH,GAAK,OAAIA,EAAMC,SAASG,MAAO,EAC9CC,EAAkB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,SAAU,EACpDC,EAAc,SAAAP,GAAK,OAAIA,EAAMC,SAASO,KAAM,EAE5CC,GAAyBC,EAAAA,EAAAA,IACpC,CAACX,EAAgBI,IACjB,SAACF,EAAUG,GAIT,OAHyBH,EAASG,QAAO,SAAAO,GAAO,OAAAA,EAAJC,KACrCC,cAAcC,SAASV,EAAOS,cAAc,GAGrD,I,UCdWE,EAAkB,SAAAC,GAC7B,MAAsB,kBAARA,EACV,GACAA,EACGC,MAAM,KACNC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,EAAE,IACxDC,KAAK,IACd,E,oFCHMC,GAAetD,EAAAA,EAAAA,IAAOW,EAAAA,EAAPX,EAAe,iBAAO,CACzCuD,UACE,qFAEFC,MAAO,OACPC,aAAc,MACdC,QAAS,WACT,UAAW,CACTH,UACE,qFACFI,gBAAiB,WAEpB,IAMD,EAJ8B,SAAHlB,GAAgC,IAA1BmB,EAAQnB,EAARmB,SAAaC,GAAKC,EAAAA,EAAAA,GAAArB,EAAAsB,GACjD,OAAOC,EAAAA,EAAAA,KAACV,GAAYW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKJ,GAAK,IAAAD,SAAGA,IACnC,EC6DA,EAnEoB,WAClB,IAAMM,GAAWC,EAAAA,EAAAA,MACXpC,GAAWqC,EAAAA,EAAAA,IAAYvC,GA0B7B,OACEmC,EAAAA,EAAAA,KAACK,EAAAA,GAAM,CACLC,cAAe,CACb5B,KAAM,GACN6B,OAAQ,IAEVC,SA9BiB,SAACC,EAAMhC,GAAqB,IAAjBiC,EAASjC,EAATiC,UACxBC,EAAU,CACdjC,KAAM+B,EAAO/B,KACb6B,OAAQE,EAAOF,QAOjB,GAJoBxC,EAAS6C,MAC3B,SAAAC,GAAO,OAAAA,EAAJnC,KAAgBC,gBAAkBgC,EAAQjC,KAAKC,aAAa,IAK/D,OADAmC,MAAM,GAADC,OAAIlC,EAAgB8B,EAAQjC,MAAK,4BAC/BgC,IAEPR,GACEc,EAAAA,EAAAA,IAAW,CACTtC,KAAMG,EAAgB8B,EAAQjC,MAC9B6B,OAAQI,EAAQJ,UAGpBG,GAEJ,EAQ2Bd,UAEvBqB,EAAAA,EAAAA,MAACjE,EAAU,CAAA4C,SAAA,EACTqB,EAAAA,EAAAA,MAAC/D,EAAK,CAAA0C,SAAA,CAAC,QAELI,EAAAA,EAAAA,KAACxC,EAAW,CACV0D,KAAK,OACLxC,KAAK,OACLyC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZrB,EAAAA,EAAAA,KAACrC,EAAkB,CAACe,KAAK,OAAO4C,UAAU,SAC1CL,EAAAA,EAAAA,MAAC/D,EAAK,CAAA0C,SAAA,CAAC,UAELI,EAAAA,EAAAA,KAACxC,EAAW,CACV0D,KAAK,MACLxC,KAAK,SACLyC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZrB,EAAAA,EAAAA,KAACrC,EAAkB,CAACe,KAAK,SAAS4C,UAAU,SAC5CtB,EAAAA,EAAAA,KAACzD,EAAAA,GAAS,CAAAqD,UACRI,EAAAA,EAAAA,KAACuB,EAAY,CAACL,KAAK,SAAQtB,SAAC,sBAKtC,EC7Ea4B,EAAMxF,EAAAA,GAAOyF,IAAGvF,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+DAKhBuF,EAAI1F,EAAAA,GAAOoB,EAACd,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,kCAIZwF,EAAe3F,EAAAA,GAAO4F,OAAMnF,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,+GAC9B,SAAAiB,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,I,UCNvBsE,EAAU,SAAHpD,GAA8B,IAAxBqD,EAAErD,EAAFqD,GAAIpD,EAAID,EAAJC,KAAM6B,EAAM9B,EAAN8B,OAC5BL,GAAWC,EAAAA,EAAAA,MAGjB,OACEc,EAAAA,EAAAA,MAACO,EAAG,CAAA5B,SAAA,EACFqB,EAAAA,EAAAA,MAACS,EAAC,CAAA9B,SAAA,CACClB,EAAK,KAAG6B,MAEXP,EAAAA,EAAAA,KAAC2B,EAAY,CACX,aAAW,SACXI,QATe,WAAH,OAAS7B,GAAS8B,EAAAA,EAAAA,IAAcF,GAAK,EAUjDG,mBAAiB,EAAArC,UAEjBI,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CAACC,SAAS,cAI7B,ECtBaC,EAAKpG,EAAAA,GAAOqG,GAAEnG,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8FAOdmG,EAAKtG,EAAAA,GAAOuG,GAAEjG,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,iDAEhB,SAAAiB,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,ICNvBiF,EAAc,WACzB,IAAMC,GAAkBrC,EAAAA,EAAAA,IAAY7B,GAC9BD,GAAQ8B,EAAAA,EAAAA,IAAY/B,GAE1B,OACE4C,EAAAA,EAAAA,MAAAyB,EAAAA,SAAA,CAAA9C,SAAA,CACGtB,IAAS0B,EAAAA,EAAAA,KAAA,OAAAJ,SAAMtB,KAChB0B,EAAAA,EAAAA,KAACoC,EAAE,CAAAxC,SACA6C,EAAgBzD,KAAI,SAAA2B,GAAO,OAC1BX,EAAAA,EAAAA,KAACsC,EAAE,CAAA1C,UACDI,EAAAA,EAAAA,KAAC6B,EAAO,CACNC,GAAInB,EAAQmB,GACZpD,KAAMiC,EAAQjC,KACd6B,OAAQI,EAAQJ,UAJXI,EAAQmB,GAMZ,QAKf,ECvBaa,GAAa3G,EAAAA,GAAOyF,IAAGvF,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,QACvByG,GAAa5G,EAAAA,GAAOmB,MAAKb,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,8FAI3B,SAAAiB,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,IAEvBsF,GAAc7G,EAAAA,GAAO8G,MAAKrG,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,mLAI5B,SAAAiB,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,IACd,SAAAH,GAAC,OAAIA,EAAEC,MAAMK,aAAa,I,WCShD,GAlBe,WACb,IAAMwC,GAAWC,EAAAA,EAAAA,MACXjC,GAASkC,EAAAA,EAAAA,IAAYnC,GAM3B,OACE+B,EAAAA,EAAAA,KAAC2C,GAAU,CAAA/C,UACTqB,EAAAA,EAAAA,MAAC2B,GAAU,CAAAhD,SAAA,CAAC,0BAEVI,EAAAA,EAAAA,KAAC6C,GAAW,CAAC3B,KAAK,OAAO6B,MAAO7E,EAAQ8E,SARzB,SAAAC,GACnB/C,GAASgD,EAAAA,GAAAA,GAAUD,EAAEE,cAAcJ,OACrC,QAUF,E,8ECjBaK,IAAgBpH,EAAAA,EAAAA,IAAOQ,GAAAA,EAAPR,CAAWE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oTAGpBkH,IAaPC,GAAmBtH,EAAAA,GAAOuH,QAAOjH,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,6eAsCjCqH,IALexH,EAAAA,GAAOyH,GAAEhH,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,sDAKPH,EAAAA,GAAO0H,GAAE9G,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,sE,WClBvC,GA1BiB,WACf,IAAM+D,GAAWC,EAAAA,EAAAA,MACX/B,GAAYgC,EAAAA,EAAAA,IAAYjC,GAM9B,OAJAwF,EAAAA,EAAAA,YAAU,WACRzD,GAAS0D,EAAAA,EAAAA,MACX,GAAG,CAAC1D,KAGFF,EAAAA,EAAAA,KAAA,OAAAJ,UACEqB,EAAAA,EAAAA,MAACmC,GAAa,CAAAxD,SAAA,EACZqB,EAAAA,EAAAA,MAACqC,GAAgB,CAAClC,MAAM,YAAWxB,SAAA,EACjCI,EAAAA,EAAAA,KAACwD,GAAc,CAAA5D,SAAC,oBAChBI,EAAAA,EAAAA,KAAC6D,EAAW,QAEd5C,EAAAA,EAAAA,MAACqC,GAAgB,CAAClC,MAAM,WAAUxB,SAAA,EAChCI,EAAAA,EAAAA,KAACwD,GAAc,CAAA5D,SAAC,cAChBI,EAAAA,EAAAA,KAAC8D,GAAM,IACN1F,IAAa4B,EAAAA,EAAAA,KAAC+D,GAAAA,EAAc,CAACvE,MAAM,OAAOwE,KAAM,MACjDhE,EAAAA,EAAAA,KAACwC,EAAW,WAKtB,C","sources":["components/CustomElements/CustomForm.jsx","components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.jsx","utils/capitalizedName.jsx","components/CustomElements/CustomButtonPhonebook.jsx","components/ContactForm/ContactForm.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.slyled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { Box, Button, TextField } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const CustomForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const CustomTextField = styled(TextField)`\n  & .MuiOutlinedInput-notchedOutline {\n    border-color: #3e7ca9;\n  }\n  &::placeholder {\n    color: #3e7ca9;\n  }\n`;\n\nexport const CustomBox = styled(Box)`\n  display: flex;\n  justify-content: center;\n  margin: 10px 0;\n`;\n\nexport const CustomButtonSub = styled(Button)`\n   && {\n    color: #3e7ca9;\n    background-color: transparent;\n    box-shadow: 1px 1px 8px rgba(62, 124, 169);\n    transition: background-color 0.3s, color 0.3s;\n\n    &:hover {\n      color: #01191f;\n      background-color: #3e7ca9;\n    }\n  }\n`;\n\nexport const CustomNavLink = styled(NavLink)`\n  color: #3e7ca9;\n  text-decoration: underline;\n  padding: 5px;\n\n  &:hover {\n    color: #01191f;\n  }\n`;","import styled from 'styled-components';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 20px;\n  color: ${p => p.theme.colors.white};\n`;\n\nexport const InputStyled = styled(Field)`\n  width: 100%;\n  padding: 8px;\n  margin-top: 3px;\n  color: ${p => p.theme.colors.white};\n  border: 1px solid ${p => p.theme.activeNavLink};\n  border-radius: 4px;\n  outline: none;\n  background-color: transparent;\n`;\n\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n  color: red;\n`;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const filteredcontacts = contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n    return filteredcontacts;\n  }\n);","export const capitalizedName = str => {\n  return typeof str !== 'string'\n    ? ''\n    : str\n        .split(' ')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n        .join(' ');\n};\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Button } from '@mui/material';\n\nconst StyledButton = styled(Button)(() => ({\n  boxShadow:\n    '0px 0px 8px 2px rgba(235, 241, 241, 0.7), 0px 0px 8px 2px rgba(209, 216, 216, 0.7)',\n\n  color: '#fff',\n  borderRadius: '4px',\n  padding: '5px 20px',\n  '&:hover': {\n    boxShadow:\n      '0px 0px 8px 2px rgba(235, 241, 241, 0.7), 0px 0px 8px 2px rgba(209, 216, 216, 0.7)',\n    backgroundColor: '#032c4b',\n  },\n}));\n\nconst CustomButtonPhonebook = ({ children, ...props }) => {\n  return <StyledButton {...props}>{children}</StyledButton>;\n};\n\nexport default CustomButtonPhonebook;\n","import { Formik } from 'formik';\nimport {\n  ErrorMessageStyled,\n  FormStyled,\n  InputStyled,\n  Label,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { capitalizedName } from 'utils/capitalizedName';\nimport { CustomBox } from 'components/CustomElements/CustomForm';\nimport CustomButton from 'components/CustomElements/CustomButtonPhonebook';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const contact = {\n      name: values.name,\n      number: values.number,\n    };\n\n    const isExistName = contacts.find(\n      ({ name }) => name.toLowerCase() === contact.name.toLowerCase()\n    );\n\n    if (isExistName) {\n      alert(`${capitalizedName(contact.name)} is already in contacts`);\n      return resetForm();\n    } else {\n      dispatch(\n        addContact({\n          name: capitalizedName(contact.name),\n          number: contact.number,\n        })\n      );\n      resetForm();\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      onSubmit={handleSubmit}\n    >\n      <FormStyled>\n        <Label>\n          Name\n          <InputStyled\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <ErrorMessageStyled name=\"name\" component=\"div\" />\n        <Label>\n          Number\n          <InputStyled\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <ErrorMessageStyled name=\"number\" component=\"div\" />\n        <CustomBox>\n          <CustomButton type=\"submit\">Add contact</CustomButton>\n        </CustomBox>\n      </FormStyled>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const P = styled.p`\n  padding-right: 15px;\n`;\n\nexport const ButtonDelete = styled.button`\n  color: ${p => p.theme.colors.white};\n  background-color: transparent;\n  border: none;\n  padding: 0;\n  cursor: pointer;\n`;\n","import { P, Div, ButtonDelete } from './Contact.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport PropTypes from 'prop-types';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <Div>\n      <P>\n        {name}: {number}\n      </P>\n      <ButtonDelete\n        aria-label=\"Delete\"\n        onClick={handleDelete}\n        disableBackground\n      >\n        <DeleteIcon fontSize=\"small\" />\n      </ButtonDelete>\n    </Div>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  padding: 10px;\n`;\n\nexport const Li = styled.li`\n  padding-bottom: 5px;\n  color: ${p => p.theme.colors.white};\n`;\n","import { Contact } from 'components/Contact/Contact';\nimport { Li, Ul } from './ContactList.slyled';\nimport { useSelector } from 'react-redux';\nimport { selectError, selectFilteredContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const filtredContacts = useSelector(selectFilteredContacts);\n  const error = useSelector(selectError);\n\n  return (\n    <>\n      {error && <div>{error}</div>}\n      <Ul>\n        {filtredContacts.map(contact => (\n          <Li key={contact.id}>\n            <Contact\n              id={contact.id}\n              name={contact.name}\n              number={contact.number}\n            />\n          </Li>\n        ))}\n      </Ul>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const DivWrapper = styled.div``;\nexport const FinedLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: ${p => p.theme.colors.white};\n`;\nexport const InputFilter = styled.input`\n  width: 100%;\n  padding: 8px;\n  margin-top: 3px;\n  color: ${p => p.theme.colors.white};\n  border: 1px solid ${p => p.theme.activeNavLink};\n  border-radius: 4px;\n  outline: none;\n  background-color: transparent;\n`;\n","import { DivWrapper, FinedLabel, InputFilter } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/contactsSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <DivWrapper>\n      <FinedLabel>\n        Fined contacts by name\n        <InputFilter type=\"text\" value={filter} onChange={handleChange} />\n      </FinedLabel>\n    </DivWrapper>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\nimport backImagePhonebook from '../../images/backgroundPhonebook.jpg';\nimport { Box } from '@mui/material';\n\nexport const MainContainer = styled(Box)`\n  display: flex;\n  justify-content: space-evenly;\n  background: url(${backImagePhonebook});\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  height: 100vh;\n\n  @media (max-width: 640px) {\n    flex-direction: column;\n    align-items: center;\n    height: 100%;\n  }\n`;\n\nexport const SectionContainer = styled.section`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  max-width: 400px;\n  background-color: transparent;\n  border-radius: 4px;\n  margin: 0 8px;\n\n  &:first-child {\n    margin-left: 0;\n    align-items: center;\n  }\n\n  &:last-child {\n    margin-right: 0;\n  }\n\n  @media (max-width: 640px) {\n    margin: 8px 0;\n\n    &:first-child {\n      margin-top: 0;\n    }\n\n    &:last-child {\n      margin-bottom: 0;\n      align-items: center;\n    }\n  }\n`;\n\nexport const SectionTitle = styled.h2`\n  font-size: 20px;\n  margin-bottom: 16px;\n`;\n\nexport const PhonebookTitle = styled.h1`\n  font-size: 24px;\n  margin: 20px auto;\n  color: white;\n`;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport {\n  MainContainer,\n  PhonebookTitle,\n  SectionContainer,\n} from './Contacts.styled';\nimport CenteredLoader from 'components/Loader/Loader';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <MainContainer>\n        <SectionContainer title=\"Phonebook\">\n          <PhonebookTitle>Your phonebook</PhonebookTitle>\n          <ContactForm />\n        </SectionContainer>\n        <SectionContainer title=\"Contacts\">\n          <PhonebookTitle>Contacts</PhonebookTitle>\n          <Filter />\n          {isLoading && <CenteredLoader color=\"#fff\" size={80} />}\n          <ContactList />\n        </SectionContainer>\n      </MainContainer>\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["CustomForm","styled","form","_templateObject","_taggedTemplateLiteral","CustomTextField","TextField","_templateObject2","CustomBox","Box","_templateObject3","CustomButtonSub","Button","_templateObject4","CustomNavLink","NavLink","_templateObject5","FormStyled","Form","Label","label","p","theme","colors","white","InputStyled","Field","activeNavLink","ErrorMessageStyled","ErrorMessage","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","_ref","name","toLowerCase","includes","capitalizedName","str","split","map","word","charAt","toUpperCase","slice","join","StyledButton","boxShadow","color","borderRadius","padding","backgroundColor","children","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","dispatch","useDispatch","useSelector","Formik","initialValues","number","onSubmit","values","resetForm","contact","find","_ref2","alert","concat","addContact","_jsxs","type","pattern","title","required","component","CustomButton","Div","div","P","ButtonDelete","button","Contact","id","onClick","deleteContact","disableBackground","DeleteIcon","fontSize","Ul","ul","Li","li","ContactList","filtredContacts","_Fragment","DivWrapper","FinedLabel","InputFilter","input","value","onChange","e","setFilter","currentTarget","MainContainer","backImagePhonebook","SectionContainer","section","PhonebookTitle","h2","h1","useEffect","fetchContacts","ContactForm","Filter","CenteredLoader","size"],"sourceRoot":""}