{"version":3,"file":"static/js/490.1fe287a0.chunk.js","mappings":"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","sources":["components/CustomElements/CustomForm.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.styled.jsx","pages/Register/Register.jsx"],"sourcesContent":["import { Box, Button, TextField } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const CustomForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const CustomTextField = styled(TextField)`\n  & .MuiOutlinedInput-notchedOutline {\n    border-color: #3e7ca9;\n  }\n  &::placeholder {\n    color: #3e7ca9;\n  }\n`;\n\nexport const CustomBox = styled(Box)`\n  display: flex;\n  justify-content: center;\n  margin: 10px 0;\n`;\n\nexport const CustomButtonSub = styled(Button)`\n   && {\n    color: #3e7ca9;\n    background-color: transparent;\n    box-shadow: 1px 1px 8px rgba(62, 124, 169);\n    transition: background-color 0.3s, color 0.3s;\n\n    &:hover {\n      color: #01191f;\n      background-color: #3e7ca9;\n    }\n  }\n`;\n\nexport const CustomNavLink = styled(NavLink)`\n  color: #3e7ca9;\n  text-decoration: underline;\n  padding: 5px;\n\n  &:hover {\n    color: #01191f;\n  }\n`;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { CustomBox, CustomButtonSub, CustomForm, CustomTextField } from 'components/CustomElements/CustomForm';\nimport { toast } from 'react-toastify';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Name is required'),\n    email: Yup.string().email('Invalid email address').required('Email is required'),\n    password: Yup.string()\n      .matches(/^(?=.*[a-zA-Z].*[a-zA-Z])(?=.*\\d).{6,}$/, 'Password must contain at least 6 characters, including 2 letters')\n      .required('Password is required'),\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n  \n    try {\n      await validationSchema.validate({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      });\n  \n      const checkEmailResponse = await axios.get(`/users?email=${form.elements.email.value}`);\n  \n      if (checkEmailResponse.status === 200) {\n        toast.error('Email already exists');\n        return;\n      }\n  \n      const formData = {\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      };\n  \n      const resultAction = await dispatch(register(formData));\n  \n      if (register.fulfilled.match(resultAction)) {\n        toast.success('Registration successful');\n        form.reset();\n      } else {\n        toast.error('Registration failed');\n      }\n    } catch (error) {\n      toast.error('Email already exists');\n    }\n  };\n  \n\n  return (\n    <CustomForm onSubmit={handleSubmit} autoComplete=\"off\">\n      <CustomTextField\n        label=\"Username\"\n        name=\"name\"\n        variant=\"outlined\"\n        size=\"small\"\n        fullWidth\n        margin=\"normal\"\n      />\n      <CustomTextField\n        label=\"Email\"\n        name=\"email\"\n        variant=\"outlined\"\n        size=\"small\"\n        fullWidth\n        margin=\"normal\"\n      />\n      <CustomTextField\n        label=\"Password\"\n        name=\"password\"\n        type=\"password\"\n        variant=\"outlined\"\n        size=\"small\"\n        fullWidth\n        margin=\"normal\"\n      />\n      <CustomBox>\n        <CustomButtonSub type=\"submit\" variant=\"contained\" color=\"primary\">\n          Register\n        </CustomButtonSub>\n      </CustomBox>\n    </CustomForm>\n  );\n};\n\nexport default RegisterForm;\n","import styled from 'styled-components';\nimport backImage from '../../images/background.jpg';\n\nexport const MainContainer = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  background: url(${backImage});\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n`;\n\nexport const ContentContainer = styled.div`\n  max-width: 400px;\n  padding: 20px;\n  border: 1px solid #3e7ca9;\n  border-radius: 4px;\n  background-color: #fefefe29;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\n`;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\nimport { ContentContainer, MainContainer } from './Register.styled';\nimport { CustomNavLink } from 'components/CustomElements/CustomForm';\n\nconst Register = () => {\n  return (\n    <MainContainer>\n      <ContentContainer>\n        <h2>Registration</h2>\n        <RegisterForm />\n        <p>\n          Have you already signed up?\n          <CustomNavLink to=\"/login\">Sign in</CustomNavLink>\n        </p>\n      </ContentContainer>\n    </MainContainer>\n  );\n};\n\nexport default Register;\n"],"names":["CustomForm","styled","form","_templateObject","_taggedTemplateLiteral","CustomTextField","TextField","_templateObject2","CustomBox","Box","_templateObject3","CustomButtonSub","Button","_templateObject4","CustomNavLink","NavLink","_templateObject5","dispatch","useDispatch","validationSchema","Yup","shape","name","required","email","password","matches","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","formData","resultAction","wrap","_context","prev","next","preventDefault","currentTarget","validate","elements","value","axios","get","concat","sent","status","toast","error","abrupt","register","fulfilled","match","success","reset","t0","stop","_x","apply","arguments","_jsxs","onSubmit","autoComplete","children","_jsx","label","variant","size","fullWidth","margin","type","color","MainContainer","main","backImage","ContentContainer","div","RegisterForm","to"],"sourceRoot":""}