{"version":3,"file":"static/js/641.323a4b65.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.jsx","utils/capitalizedName.jsx","components/ContactForm/ContactForm.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.slyled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Field, Form } from 'formik';\n\nexport const FormStyled = styled(Form)`\ndisplay: flex;\nflex-direction: column;\npadding: 10px;\nmargin: 25px 0 25px 0;\nmax-width: 350px;\nborder: 1px solid ${p => p.theme.colors.black};\n`;\n\nexport const Label = styled.label`\n display: flex;\n flex-direction: column;\n padding-bottom: 20px;\n `;\n\nexport const InputStyled = styled(Field)`\n padding: 4px;\n margin-top: 10px;\n max-width: 250px;\n font-size: 14px;\n border: ${p => p.theme.border};\n border-radius: ${p => p.theme.borderRadius};\n &:hover, &:focus {\n    border-color: ${p => p.theme.colors.borderAccent};\n    outline: none;\n};\n `;\n\nexport const ButtonAdd = styled.button`\n border: ${p => p.theme.border};\n border-radius: ${p => p.theme.borderRadius};\n font-size: 13px;\n background-color: ${p => p.theme.colors.white};\n &:hover {\n    border: ${p => p.theme.colors.backgroundButtoHover};\n    background-color: ${p => p.theme.colors.backgroundButtoHover};\n    box-shadow: 0 0 10px rgba(123, 123, 123, 0.426);\n };\n `;","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const filteredcontacts = contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n    return filteredcontacts;\n  }\n);","export const capitalizedName = str => {\n  return typeof str !== 'string'\n    ? ''\n    : str\n        .split(' ')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n        .join(' ');\n};\n","import { Formik } from 'formik';\nimport {\n  ButtonAdd,\n  FormStyled,\n  InputStyled,\n  Label,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { capitalizedName } from 'utils/capitalizedName';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const contact = {\n      name: values.name,\n      number: values.number,\n    };\n\n    const isExistName = contacts.find(\n      ({ name }) => name.toLowerCase() === contact.name.toLowerCase()\n    );\n\n    if (isExistName) {\n      alert(`${capitalizedName(contact.name)} is already in contacts`);\n      return resetForm();\n    } else {\n      dispatch(\n        addContact({\n          name: capitalizedName(contact.name),\n          number: contact.number,\n        })\n      );\n      resetForm();\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      onSubmit={handleSubmit}\n    >\n      <FormStyled>\n        <Label>\n          Name\n          <InputStyled\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label>\n          Number\n          <InputStyled\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <div>\n          <ButtonAdd type=\"submit\">Add contact</ButtonAdd>\n        </div>\n      </FormStyled>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import styled from \"styled-components\";\n\nexport const Div = styled.div` \ndisplay: flex;\n`;\n\nexport const P = styled.p`\npadding-right: 15px;\n`;\n\nexport const ButtonDelete = styled.button`\nbackground-color: ${p => p.theme.colors.white};\nborder: ${p => p.theme.border};\nborder-radius: ${p => p.theme.borderRadius};\nfont-size: 13px;\n&:hover {\n    border: ${p => p.theme.colors.backgroundButtoHover};\n    background-color: ${p => p.theme.colors.backgroundButtoHover};\n    box-shadow: 0 0 10px rgba(123, 123, 123, 0.426);\n };\n`;\n","import { P, ButtonDelete, Div } from './Contact.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport PropTypes from 'prop-types';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <Div>\n      <P>\n        {name}: {number}\n      </P>\n      <ButtonDelete aria-label=\"Delete\" onClick={handleDelete}>\n        Delete\n      </ButtonDelete>\n    </Div>\n  );\n};\n\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};","import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  padding: 10px;\n`;\n\nexport const Li = styled.li`\n  padding-bottom: 5px;\n`;\n","import { Contact } from 'components/Contact/Contact';\nimport { Li, Ul } from './ContactList.slyled';\nimport { useSelector } from 'react-redux';\nimport {\n  selectError,\n  selectFilteredContacts,\n} from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const filtredContacts = useSelector(selectFilteredContacts);\n  const error = useSelector(selectError);\n\n  return (\n    <>\n      {error && <div>{error}</div>}\n      <Ul>\n        {filtredContacts.map(contact => (\n          <Li key={contact.id}>\n            <Contact\n              id={contact.id}\n              name={contact.name}\n              number={contact.number}\n            />\n          </Li>\n        ))}\n      </Ul>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const DivWrapper = styled.div`\n  padding-top: 25px;\n`;\n\nexport const InputFilter = styled.input`\n  display: flex;\n  padding: 4px;\n  margin-top: 10px;\n  font-size: 14px;\n  border: ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n  &:hover,\n  &:focus {\n    border-color: ${p => p.theme.colors.borderAccent};\n    outline: none;\n  }\n`;\n","import { DivWrapper, InputFilter } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/contactsSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <DivWrapper>\n      <label>\n        Fined contacts by name\n        <InputFilter type=\"text\" value={filter} onChange={handleChange} />\n      </label>\n    </DivWrapper>\n  );\n};\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <main>\n        <section title=\"Phonebook\">\n        <h1>Your phonebook</h1>\n          <ContactForm />\n        </section>\n        <section title=\"Contacts\">\n        <h2>Contacts</h2>\n          <Filter />\n          {isLoading && <Loader />}\n          <ContactList />\n        </section>\n      </main>\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["FormStyled","styled","Form","_templateObject","_taggedTemplateLiteral","p","theme","colors","black","Label","label","_templateObject2","InputStyled","Field","_templateObject3","border","borderRadius","borderAccent","ButtonAdd","button","_templateObject4","white","backgroundButtoHover","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","_ref","name","toLowerCase","includes","capitalizedName","str","split","map","word","charAt","toUpperCase","slice","join","dispatch","useDispatch","useSelector","_jsx","Formik","initialValues","number","onSubmit","values","resetForm","contact","find","_ref2","alert","concat","addContact","children","_jsxs","type","pattern","title","required","Div","div","P","ButtonDelete","Contact","id","onClick","deleteContact","Ul","ul","Li","li","ContactList","filtredContacts","_Fragment","DivWrapper","InputFilter","input","value","onChange","e","setFilter","currentTarget","useEffect","fetchContacts","ContactForm","Filter","Loader"],"sourceRoot":""}